name: build-win
on:
  push:
env:
  CMAKE_COMMAND: 'cmake'
  MAKE_COMMAND: 'cmake --build . --config Release'
jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3.5.3
        with:
          submodules: recursive
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.11
      - run: conda info
        shell: bash -el {0}
      - run: |
          conda install -y -c intel \
            tbb-devel==2019.2 \
            ipp-include==2019.2 \
            ipp-static==2019.2
        shell: bash -el {0}
      - run: |
          conda install -y -c conda-forge \
            boost==1.82.0 \
            armadillo==12.6.2
        shell: bash -el {0}
      - run: conda list
        shell: bash -el {0}
      - run: ls C:/Miniconda/envs/test
      - run: ls C:/Miniconda/envs/test/Library
      - run: ls C:/Miniconda/envs/test/Library/bin
      - run: ls C:/Miniconda/envs/test/Library/lib
      - run: ls C:/Miniconda/envs/test/Library/include
      - run: mkdir -p /tmp/results
        shell: bash
      - name: build release version
        shell: bash
        run: |
          # PGOは効果ない
          $CMAKE_COMMAND -DCMAKE_BUILD_TYPE=Release -DSANDYBRIDGE_SUPPORT=ON -DDISABLE_TARGET_BENCH=ON -DDISABLE_TARGET_TEST=ON .
          ls -la
          bash -c "$MAKE_COMMAND"

          cp bin/Release/* bin
          cp -R bin/Release /tmp/results/bin
          cp -R CMakeFiles /tmp/results/CMakeFiles
          cp prebuilt/win64/libsndfile-1.2.2-win64/bin/sndfile.dll /tmp/results/bin
          # cp ${CONDA_ROOT}/Library/bin/armadillo.dll /tmp/results/bin
          cp ${CONDA_ROOT}/Library/bin/boost_system.dll /tmp/results/bin
          cp ${CONDA_ROOT}/Library/bin/boost_filesystem.dll /tmp/results/bin
          cp ${CONDA_ROOT}/Library/bin/boost_serialization.dll /tmp/results/bin
          cp ${CONDA_ROOT}/Library/bin/boost_math_tr1.dll /tmp/results/bin
          cp ${CONDA_ROOT}/Library/bin/boost_iostreams.dll /tmp/results/bin
          cp ${CONDA_ROOT}/Library/bin/tbb.dll /tmp/results/bin
          cp ${CONDA_ROOT}/Library/bin/tbbmalloc.dll /tmp/results/bin
          cp ${CONDA_ROOT}/Library/bin/libbz2.dll /tmp/results/bin
          cp ${CONDA_ROOT}/Library/bin/zlib.dll /tmp/results/bin
          cp ${CONDA_ROOT}/Library/bin/zstd.dll /tmp/results/bin
        env:
          CONDA_ROOT: C:/Miniconda/envs/test
      - run: git clone --single-branch --depth 1 -b master https://github.com/ai-mastering/bakuage_dataset1.git /tmp/bakuage_dataset1
        shell: bash
      - name: create sound_quality2_cache for prod
        shell: bash
        run: |
          bin/audio_analyzer --mode=sound_quality2_preparation --analysis_data_dir=/tmp/bakuage_dataset1/analysis_shortpath --sound_quality2_cache=/tmp/results/sound_quality2_cache
          cp /tmp/results/sound_quality2_cache resource/sound_quality2_cache
      - name: create release tar
        shell: bash
        run: |
          (
            mv bin built
            mv .circleci/executable_licenses ./
            mkdir -p /tmp/phaselimiter_build
            cp -r . /tmp/phaselimiter_build/phaselimiter
            cd /tmp/phaselimiter_build
            tar -Jcf /tmp/results/release.tar.xz -T phaselimiter/.circleci/release_files.txt
          )
      - uses: actions/upload-artifact@v3
        with:
          name: build-results
          path: /tmp/results
  test:
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3.5.3
      - uses: actions/download-artifact@v3
        with:
          name: build-results
          path: /tmp/results
      - run: mv /tmp/results/bin ./bin && chmod +x ./bin/* && mkdir -p /tmp/test_results
        shell: bash
      - run: |
          bin/phase_limiter --input test_data/test2.wav --output /tmp/test_results/output.wav --mastering=true --mastering_mode=mastering5 --sound_quality2_cache=/tmp/results/sound_quality2_cache
        shell: bash
      - uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: /tmp/test_results
